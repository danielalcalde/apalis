.. currentmodule:: apalis
Classes
#######
The Handler and GroupHandler classes can be used to parallelize objects in python.
For examples on how to use the classes see this :doc:`Jupyter Notebook </examples>`.

If you are unsure which class to use it is recommended to use the Handler class.
The Handler class is easier to work with and as fast as the GroupHandler class if the number of objects that need to be parallelized is less or equal than the number of cores in your CPU.

If you want to parallelize more objects than the number of your CPU cores I recommend using the GroupHandler class.
It will distribute your objects onto as many processes as CPU cores you have on your machine.
In the image bellow, the Handler and GroupHandler are compared for workloads where 32 objects are parallelized on a 16 core CPU.
Different tasks that take different time :math:`t_{single}` are parallelized by both Handler and GroupHandler.

.. image:: _images/timings_37_0.png

The image was generated by this :doc:`Jupyter Notebook </timings>`. Note that the longer the task takes the closer to 16 times improvement we get.

Handlers
========

.. toctree::
   :maxdepth: 2

   Handler  <apalis.Handler>
   GroupHandler <apalis.GroupHandler>

Decorators
==========
.. autoclass:: apalis.RemoteClass

Shared Objects
==============
.. autoclass:: apalis.SharedArray
    :members: unlink

